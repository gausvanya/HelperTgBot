from aiogram.types import Message
from aiogram import Router, F
from aiogram.filters import Command

from app.DataBase.database import Database
from app.utils import check_admins

db = Database()
router = Router()


@router.message(Command('–∑–∞–º–µ—Ç–∫–∞', prefix='+', ignore_case=True), F.chat.type != 'private')
async def add_note(message: Message):
    chat_id = message.chat.id

    if not check_admins(message):
        return

    try:
        note_name = message.text.lower().split('\n', 1)[0].split(maxsplit=1)[1]
        note_text = message.md_text.split('\n', 1)[1]
    except IndexError:
        return await message.reply('‚ùóÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n`+–∑–∞–º–µ—Ç–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ]\n–¢–µ–∫—Å—Ç —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.`')

    notes_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=? AND note_name', (chat_id, note_name))

    if notes_db:
        return await message.reply('‚ùé –ó–∞–º–µ—Ç–∫–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')

    max_note_number = await db.query('SELECT MAX(number_note) FROM chat_notes WHERE chat_id=?', (chat_id,))
    note_number = max_note_number[0][0] or 0

    await db.query('INSERT INTO chat_notes VALUES(?, ?, ?, ?)', (chat_id, note_name, note_text, note_number + 1))
    await message.reply(f'‚úÖ –ó–∞–º–µ—Ç–∫–∞ **{note_name} (#{note_number + 1})** —Å–æ–∑–¥–∞–Ω–∞')


@router.message(Command('–∑–∞–º–µ—Ç–∫–∞', prefix='-', ignore_case=True), F.chat.type != 'private')
async def remove_note(message: Message):
    chat_id = message.chat.id

    if not check_admins(message):
        return

    try:
        note_name = message.text.lower().split('\n', 1)[0].split(maxsplit=1)[1]
    except IndexError:
        return await message.reply('‚ùóÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n`-–∑–∞–º–µ—Ç–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ | –Ω–æ–º–µ—Ä]`')

    if note_name.isdigit():
        note_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=? AND number_note=?', (chat_id, int(note_name)))
    else:
        note_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=? AND note_name=?', (chat_id, note_name))

    if not note_db:
        return await message.reply(f'‚ùé –ó–∞–º–µ—Ç–∫–∞ **{note_name}** –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')

    await db.query('DELETE FROM chat_notes WHERE chat_id=? AND note_name=?', (chat_id, note_name))
    await message.reply(f'‚úÖ –ó–∞–º–µ—Ç–∫–∞ **{note_db[0][1]}** —É–¥–∞–ª–µ–Ω–∞.')


@router.message(Command('–∑–∞–º–µ—Ç–∫–∏', prefix='!/.', ignore_case=True), F.chat.type != 'private')
@router.message(F.text.lower().split('\n', 1)[0] == '–∑–∞–º–µ—Ç–∫–∏')
async def get_note_list(message: Message):
    note_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=?', (message.chat.id,))
    if not note_db:
        return await message.reply('‚ùå –ó–∞–º–µ—Ç–æ–∫ –ø–æ–∫–∞ –Ω–µ—Ç—É.\n\nüí¨ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ:\n'
                                   '`+–∑–∞–º–µ—Ç–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ]\n—Ç–µ–∫—Å—Ç —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏`')

    note_text = 'üìù **–ó–∞–º–µ—Ç–∫–∏ —á–∞—Ç–∞:**\n'
    for note in note_db:
        note_text += f'#{note[3]}. `{note[1]}`'

    await message.reply(note_text + '\n\nüí¨ –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–º–µ—Ç–∫—É –ø—Ä–æ–ø–∏—à–∏—Ç–µ: `!–∑–∞–º–µ—Ç–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ | –Ω–æ–º–µ—Ä]`')


@router.message(Command('–∑–∞–º–µ—Ç–∫–∞', prefix='/.!', ignore_case=True), F.chat.type != 'private')
@router.message(F.text.lower().split('\n', 1)[0].split()[0] == '–∑–∞–º–µ—Ç–∫–∞')
async def get_note(message: Message):
    chat_id = message.chat.id
    try:
        note_name = message.text.lower().split('\n', 1)[0].split(maxsplit=1)[1]
    except IndexError:
        return await message.reply('Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ:\n`!–∑–∞–º–µ—Ç–∫–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ | –Ω–æ–º–µ—Ä]`')

    if note_name.isdigit():
        note_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=? AND number_note=?', (chat_id, int(note_name)))
    else:
        note_db = await db.query('SELECT * FROM chat_notes WHERE chat_id=? AND note_name=?', (chat_id, note_name))

    if not note_db:
        return await message.reply(f'‚ùé –ó–∞–º–µ—Ç–∫–∞ **{note_name}** –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.')

    await message.answer(f'üìù –ó–∞–º–µ—Ç–∫–∞ **{note_db[0][1]}**:\n{note_db[0][2]}')
